on:
    workflow_dispatch:
    push:
      # Run when commits are pushed to mainline branch (main or master)
      # Set this to the mainline branch you are using
      branches:
        - main
        - master
    # GitHub Actions workflow to deploy to Azure using azd
    # To configure required secrets for connecting to Azure, simply run `azd pipeline config --auth-type client-credentials`
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
    build:
      runs-on: ubuntu-latest
      steps: 
          - name: Checkout
            uses: actions/checkout@v3

          - name: Install azd
            uses: Azure/setup-azd@v0.1.0

          - name: Install Nodejs
            uses: actions/setup-node@v3
            with:
              node-version: 16

          - name: 'Az CLI login'
            uses: azure/login@v1
            with:
              client-id: ${{ vars.AZURE_CLIENT_ID }}
              tenant-id: ${{ vars.AZURE_TENANT_ID }}
              subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

          - name: Set az account
            uses: azure/CLI@v1
            with:
              inlineScript: |
                  az account set --subscription ${{vars.AZURE_SUBSCRIPTION_ID}}

          - name: Check login status
            run: |
              azd auth login --check-status
            shell: pwsh

          - name: Log in with Azure
            run: |
              azd auth login `
              --client-id "$Env:AZURE_CLIENT_ID" `
              --federated-credential-provider "https://token.actions.githubusercontent.com" `
              --tenant-id "$Env:AZURE_TENANT_ID"
            shell: pwsh
            env:
              AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
              AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
              AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

          - name: Enable terraform alpha feature
            run: azd config set alpha.terraform on

          - name: Provision Infrastructure
            run: azd provision --no-prompt
            env:
              AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
              AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
              AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
              # ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
              # ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
              # ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
              RS_RESOURCE_GROUP: ${{ vars.RS_RESOURCE_GROUP }}
              RS_STORAGE_ACCOUNT: ${{ vars.RS_STORAGE_ACCOUNT }}
              RS_CONTAINER_NAME: ${{ vars.RS_CONTAINER_NAME }}

          - name: Deploy Application
            run: azd deploy --no-prompt
            env:
              AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
              AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
              AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}